name: Create and publish a Docker image

on:
  push:
    branches:
      - "main"
      - "test"

jobs:
  docker-build:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ${{ github.repository }}
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ github.repository }}:${{ github.sha }}
            ${{ github.repository }}:latest

      - name: Build and push for test branch
        if: github.ref == 'refs/heads/test'
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ github.repository }}:${{ github.sha }}
            ${{ github.repository }}:test

      - name: Run tests
        run: |
          docker pull ${{ github.repository }}:${{ github.sha }}
          docker run -e PYTHONPATH=/app -it -v $(pwd):/work --rm ${{ github.repository }}:${{ github.sha }} pytest

  generate-redoc:
    needs: docker-build
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Run Docker container
        run: |
          docker pull ${{ github.repository }}:${{ github.sha }}
          docker run -e -v $(pwd):/work --rm ${{ github.repository }}:${{ github.sha }} python app/openapi.py /work/openapi.yml

      - name: Install openapi-generate-html
        run: |
          npm install -g openapi-generate-html
          mkdir pages

      - name: Generate Stoplight Light HTML
        run: |
          npx openapi-generate-html -i openapi.json --ui=stoplight --theme=light --output pages/stoplight.html

      - name: Generate Stoplight Dark HTML
        run: |
          npx openapi-generate-html -i openapi.json --ui=redoc --theme=light --output pages/redoc.html

      - name: Generate Swagger Light HTML
        run: |
          npx openapi-generate-html -i openapi.json --ui=swagger --theme=light --output pages/swagger.html

      - name: Upload Redoc and Swagger HTML as artifacts
        uses: actions/upload-artifact@v3
        with:
          name: openapi-docs
          path: pages

      - uses: actions/upload-pages-artifact@v1
        with:
          path: pages

      - name: Clean up Docker container
        run: |
          docker stop sd-forge-container
          docker rm sd-forge-container

  documentation-deployment:
    needs: generate-redoc
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: ${{ github.ref == 'refs/heads/main' }}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      pages: write
      id-token: write
    steps:
      - uses: actions/deploy-pages@v1
        id: deployment        docker run -e -v $(pwd):/work --rm ${{ github.repository }}:${{ github.sha }} python app/openapi.py /work/openapi.yml        docker run -e -v $(pwd):/work --rm ${{ github.repository }}:${{ github.sha }} python app/openapi.py /work/openapi.yml        docker run -e -v $(pwd):/work --rm ${{ github.repository }}:${{ github.sha }} python app/openapi.py /work/openapi.yml
name: Create and publish a Docker image

on:
  push:
    branches:
      - "main"
      - "test"

jobs:
  docker-build:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ${{ github.repository }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3  # 最新バージョンに更新

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push (main)
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ github.repository }}:${{ github.sha }}
            ${{ github.repository }}:latest

      - name: Build and push (test)
        if: github.ref == 'refs/heads/test'
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ github.repository }}:${{ github.sha }}
            ${{ github.repository }}:test

      - name: Run tests
        run: |
          docker pull ${{ github.repository }}:${{ github.sha }}
          docker run -e PYTHONPATH=/app -v $(pwd):/work --rm \
            ${{ github.repository }}:${{ github.sha }} pytest

  generate-redoc:
    needs: docker-build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Run Docker container
        run: |
          docker pull ${{ github.repository }}:${{ github.sha }}
          docker run -v $(pwd):/work --rm \
            ${{ github.repository }}:${{ github.sha }} \
            python app/openapi.py /work/openapi.json --format json

      - name: Install openapi-generate-html
        run: |
          npm install -g openapi-generate-html
          mkdir -p pages

      - name: Generate Stoplight Light HTML
        run: |
          npx openapi-generate-html -i openapi.json \
            --ui=stoplight --theme=light --output pages/stoplight.html

      - name: Generate Redoc HTML
        run: |
          npx openapi-generate-html -i openapi.json \
            --ui=redoc --theme=light --output pages/redoc.html

      - name: Generate Swagger Light HTML
        run: |
          npx openapi-generate-html -i openapi.json \
            --ui=swagger --theme=light --output pages/swagger.html

      - name: Upload artifact for Pages
        uses: actions/upload-pages-artifact@v3  # v2に変更
        with:
          path: pages

  documentation-deployment:
    needs: generate-redoc
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: ${{ github.ref == 'refs/heads/main' }}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      pages: write
      id-token: write
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
